package it.snorcini.dev.bookmanager.dto;

import it.snorcini.dev.bookmanager.error.BookManagerValidationErrors;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.validation.annotation.Validated;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

/**
 * DTO used for creation of a Book.
 * <p>
 * Methods:
 * - constructor
 * - getter and setter
 * - equals
 * are auto-generated by Lombok.
 * <p>
 * This class @extends {@link AbstractBaseDTO} to beautify toString method.
 */
@Getter
@Setter
@EqualsAndHashCode(callSuper = true)
@AllArgsConstructor
@NoArgsConstructor
@Validated
public class BookDTO extends AbstractBaseDTO {

    @Valid
    @NotNull(message = BookManagerValidationErrors.ISBN_NULL)
    protected String isbn;

    @Valid
    @NotNull(message = BookManagerValidationErrors.TITLE_NULL)
    protected String title;

    @Valid
    @NotNull(message = BookManagerValidationErrors.AUTHOR_NULL)
    protected String author;

    /**
     * ToString method.
     *
     * @return a string item representation
     */
    @Override
    public String toString() {
        return new StringBuilder()
                .append("BookDTO {\n")
                .append("    isbn: ").append(toIndentedString(isbn)).append('\n')
                .append("    title: ").append(toIndentedString(title)).append('\n')
                .append("    author: ").append(toIndentedString(author)).append('\n')
                .append('}').toString();
    }
}
